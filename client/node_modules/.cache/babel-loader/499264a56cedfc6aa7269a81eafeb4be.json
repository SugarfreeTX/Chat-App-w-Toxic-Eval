{"ast":null,"code":"var _jsxFileName = \"/home/khemra/Dev Apps/React-Chat-App/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import React from 'react';\n\nimport io from 'socket.io-client';\nimport { useSearchParams } from 'react-router-dom';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    const name = searchParams.get('name');\n    const room = searchParams.get('room');\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, searchParams]);\n  useEffect(() => {\n    socket.on('message', (message, self) => {\n      if (self) return;\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', _ref => {\n      let {\n        users\n      } = _ref;\n      setUsers(users);\n    });\n  }, [messages]); // function for sending messages \n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n\n    switch (message) {\n      case 'hello':\n        socket.emit('sendMessage', {\n          user: 'ChatBot',\n          text: 'Hello!'\n        });\n        break;\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"svzcKwd+Rpv5uqCAlRVQPnM7wXQ=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","useSearchParams","InfoBar","Input","Messages","TextContainer","socket","Chat","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","searchParams","get","emit","error","alert","off","on","self","sendMessage","event","preventDefault","user","text","console","log"],"sources":["/home/khemra/Dev Apps/React-Chat-App/client/src/components/Chat/Chat.js"],"sourcesContent":["import React, {useState, useEffect } from 'react';\n// import React from 'react';\nimport io from 'socket.io-client'\nimport { useSearchParams } from 'react-router-dom';\n\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\n\n\n\nimport './Chat.css';\n\nlet socket;\n\nconst Chat = () => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n    const [searchParams] = useSearchParams();\n\n    useEffect(() => {\n\n        const name = searchParams.get('name');\n        const room = searchParams.get('room');\n        \n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room }, (error) => {\n            if(error) {\n                alert(error);\n            }\n \n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    }, [ENDPOINT, searchParams]);\n\n    useEffect(() => {\n        socket.on('message', (message, self) => {\n            if (self) return;\n            setMessages([...messages, message]);\n\n\n        });\n\n        socket.on('roomData', ({ users }) => {\n            setUsers(users);\n        });\n    }, [messages]);\n\n    // function for sending messages \n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n\n        switch(message) {\n            case 'hello':\n                socket.emit('sendMessage', { user: 'ChatBot', text: 'Hello!' });\n                break;\n        }\n\n    }\n\n    console.log(message, messages);\n\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar room={room} />\n                <Messages messages={messages} name={name} />\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />   \n            </div>\n            <TextContainer users={users}/>\n        </div>\n    \n    );\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module"}