{"ast":null,"code":"var _jsxFileName = \"/home/khemra/Dev Apps/React-Chat-App/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react'; // import React from 'react';\n\nimport queryString from 'query-string'; // this is a library that allows us to get data using query string from the URL\n\nimport io from 'socket.io-client';\nimport './Chat.css'; // let socket;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  // const [name, setName] = useState('');\n  // const [room, setRoom] = useState('');\n  // const ENDPOINT = 'localhost:5000';\n  // useEffect(() => {\n  //     const data = queryString.parse(location.search);\n  //     console.log(location.search);\n  //     console.log(data);\n  // });\n  // const { name, room } = queryString.parse(location.search);\n  //     socket = io(ENDPOINT);\n  //     setName(name);\n  //     setRoom(room);\n  //     socket.emit('join', { name, room });\n  // }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","queryString","io","Chat"],"sources":["/home/khemra/Dev Apps/React-Chat-App/client/src/components/Chat/Chat.js"],"sourcesContent":["import React, {useState, useEffect } from 'react';\n// import React from 'react';\nimport queryString from 'query-string'; // this is a library that allows us to get data using query string from the URL\nimport io from 'socket.io-client'\n\nimport './Chat.css';\n\n// let socket;\n\nconst Chat = () => {\n    // const [name, setName] = useState('');\n    // const [room, setRoom] = useState('');\n    // const ENDPOINT = 'localhost:5000';\n\n    // useEffect(() => {\n    //     const data = queryString.parse(location.search);\n\n    //     console.log(location.search);\n    //     console.log(data);\n    // });\n        // const { name, room } = queryString.parse(location.search);\n\n    //     socket = io(ENDPOINT);\n\n    //     setName(name);\n    //     setRoom(room);\n\n    //     socket.emit('join', { name, room });\n\n    // }, [ENDPOINT, location.search]);\n\n    return (\n        <h1>Chat</h1>\n    )\n}\n\n\nexport default Chat;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP,C,CAEA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACf;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACI;EAEJ;EAEA;EACA;EAEA;EAEA;EAEA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAzBD;;KAAMA,I;AA4BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}