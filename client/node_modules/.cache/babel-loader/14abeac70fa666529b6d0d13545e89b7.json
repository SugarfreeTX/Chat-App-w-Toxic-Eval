{"ast":null,"code":"var _jsxFileName = \"/home/khemra/Dev Apps/React-Chat-App/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import React from 'react';\n\nimport queryString from 'query-string'; // this is a library that allows us to get data using query string from the URL\n\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  const location = useLocation();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  const urlParams = location.pathname + location.search;\n  useEffect(() => {\n    //     const data = queryString.parse(location.search);\n    //     console.log(location.search);\n    //     console.log(data);\n    // });\n    // const { name, room } = queryString.parse(location.search);\n    const {\n      name,\n      room\n    } = queryString.parse(urlParams);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    });\n  }, [ENDPOINT], urlParams);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"Oq9YhhbsOdxZxrMV0d1zrqLuur0=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","queryString","io","useLocation","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","urlParams","pathname","search","parse","emit"],"sources":["/home/khemra/Dev Apps/React-Chat-App/client/src/components/Chat/Chat.js"],"sourcesContent":["import React, {useState, useEffect } from 'react';\n// import React from 'react';\nimport queryString from 'query-string'; // this is a library that allows us to get data using query string from the URL\nimport io from 'socket.io-client'\nimport { useLocation } from 'react-router-dom';\n\nimport './Chat.css';\n\nlet socket;\n\n\nconst Chat = () => {\n    const location = useLocation();\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = 'localhost:5000';\n    const urlParams = location.pathname + location.search;\n    \n\n    useEffect(() => {\n        \n    //     const data = queryString.parse(location.search);\n\n    //     console.log(location.search);\n    //     console.log(data);\n    // });\n    // const { name, room } = queryString.parse(location.search);\n        const { name, room } = queryString.parse(urlParams);\n        \n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room });\n\n    }, [ENDPOINT], urlParams);\n\n    return (\n        <h1>Chat</h1>\n    )\n}\n\n\nexport default Chat;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,YAAP;;AAEA,IAAIC,MAAJ;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMY,QAAQ,GAAG,gBAAjB;EACA,MAAMC,SAAS,GAAGN,QAAQ,CAACO,QAAT,GAAoBP,QAAQ,CAACQ,MAA/C;EAGAd,SAAS,CAAC,MAAM;IAEhB;IAEA;IACA;IACA;IACA;IACI,MAAM;MAAEO,IAAF;MAAQE;IAAR,IAAiBR,WAAW,CAACc,KAAZ,CAAkBH,SAAlB,CAAvB;IAEAR,MAAM,GAAGF,EAAE,CAACS,QAAD,CAAX;IAEAH,OAAO,CAACD,IAAD,CAAP;IACAG,OAAO,CAACD,IAAD,CAAP;IAEAL,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;MAAET,IAAF;MAAQE;IAAR,CAApB;EAEH,CAjBQ,EAiBN,CAACE,QAAD,CAjBM,EAiBMC,SAjBN,CAAT;EAmBA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CA9BD;;GAAMP,I;UACeF,W;;;KADfE,I;AAiCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}